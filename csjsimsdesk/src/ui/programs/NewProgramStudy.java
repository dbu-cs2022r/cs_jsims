package ui.programs;

import dataobject.ProgramStudyDO;
import domain.College;
import domain.Department;
import domain.FieldOfStudy;
import domain.ProgramAdmission;
import domain.ProgramAward;
import domain.ProgramStudy;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistence.FieldOfStudyPersistence;
import persistence.ProgramAdmissionPersistence;
import persistence.ProgramAwardPersistence;
import persistence.ProgramStudyPersistence;
import service.CollegeService;
import service.DepartmentService;
import service.FieldOfStudyService;
import service.ICollegeService;
import service.IDepartmentService;
import service.IFieldOfStudyService;
import service.IProgramAdmissionService;
import service.IProgramAwardService;
import service.IProgramStudyService;
import service.ProgramAdmissionService;
import service.ProgramAwardService;
import service.ProgramStudyService;
import ui.ViewCollege;
import utility.DropListItem;

/**
 *
 * @author ChalewT
 */
public class NewProgramStudy extends javax.swing.JDialog {

    /**
     * Creates new form NewProgramStudy
     */
    public NewProgramStudy(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbDepartment = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbFieldOfStudy = new javax.swing.JComboBox<>();
        cmbProgramAward = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbProgramAdmission = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbCollege = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProgramStudy = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Program Study");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Program Study", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 51, 255))); // NOI18N

        cmbDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDepartmentItemStateChanged(evt);
            }
        });

        jLabel1.setText("Department");

        jLabel3.setText("Field of Study");

        cmbFieldOfStudy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFieldOfStudyItemStateChanged(evt);
            }
        });

        jLabel4.setText("Program Award");

        jLabel5.setText("Program Admission");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel2.setText("College");

        cmbCollege.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCollegeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbFieldOfStudy, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProgramAward, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProgramAdmission, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCollege, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbCollege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbFieldOfStudy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbProgramAward, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbProgramAdmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Program Studies", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(102, 102, 255))); // NOI18N

        tblProgramStudy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Field of Study", "Program Award", "Admission Class"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProgramStudy);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCollegeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCollegeItemStateChanged
        if (cmbCollege.getSelectedIndex() < 0) {
            return;
        }
        try {
            cmbDepartment.removeAllItems();
            DropListItem collegeItem = (DropListItem) cmbCollege.getSelectedItem();
            int collegeId = collegeItem.getCodeValue();
            IDepartmentService departmentService = new DepartmentService();
            var departments = departmentService.getByCollegeId(collegeId);
            for (Department department : departments) {
                DropListItem departmentItem = new DropListItem(department.getId(), department.getName());
                cmbDepartment.addItem(departmentItem);
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewCollege.class.getName()).log(Level.SEVERE, ex.getMessage());
        }
    }//GEN-LAST:event_cmbCollegeItemStateChanged

    private void cmbFieldOfStudyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFieldOfStudyItemStateChanged
        loadProgramStudies();
    }//GEN-LAST:event_cmbFieldOfStudyItemStateChanged

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            if (cmbProgramAdmission.getSelectedIndex() < 0 || cmbProgramAward.getSelectedIndex() < 0 || cmbDepartment.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(this, "Please fill all required fields.", "JSims", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            ProgramStudy programStudy = new ProgramStudy();
            IProgramStudyService studyService = new ProgramStudyService(new ProgramStudyPersistence());
            var fieldSelected = (DropListItem) cmbFieldOfStudy.getSelectedItem();
            var awardSelected = (DropListItem) cmbProgramAward.getSelectedItem();
            var admissionSelected = (DropListItem) cmbProgramAdmission.getSelectedItem();

            programStudy.setFieldOfStudyId(fieldSelected.getCodeValue());
            programStudy.setProgramAwardId(awardSelected.getCodeValue());
            programStudy.setProgramAdmissionId(admissionSelected.getCodeValue());

            var saved = studyService.addProgramStudy(programStudy);
            if (saved) {
                JOptionPane.showMessageDialog(this, "Record saved successfuly.", "JSims", JOptionPane.INFORMATION_MESSAGE);
                loadProgramStudies();
            } else {
                JOptionPane.showMessageDialog(this, "Saving record faild. Try again.", "JSims", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Saving record faild. Try again.\n" + ex.getMessage(), "JSims", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Something went wrong. Try again.\n" + ex.getMessage(), "JSims", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            ICollegeService service = new CollegeService();
            var colleges = service.getAll();
            for (College college : colleges) {
                DropListItem collegeItem = new DropListItem(college.getId(), college.getName());
                cmbCollege.addItem(collegeItem);
            }
            loadProgramAwards();
            loadProgramAdmissions();
        } catch (SQLException ex) {
            Logger.getLogger(ViewCollege.class.getName()).log(Level.SEVERE, ex.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void cmbDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDepartmentItemStateChanged
        if (cmbDepartment.getSelectedIndex() < 0) {
            return;
        }
        try {
            cmbFieldOfStudy.removeAllItems();
            DropListItem departmentItem = (DropListItem) cmbDepartment.getSelectedItem();
            int departmentId = departmentItem.getCodeValue();
            IFieldOfStudyService fieldService = new FieldOfStudyService(new FieldOfStudyPersistence());
            var fields = fieldService.getByDepartmentId(departmentId);
            for (FieldOfStudy field : fields) {
                DropListItem fieldItem = new DropListItem(field.getId(), field.getName());
                cmbFieldOfStudy.addItem(fieldItem);
            }
        } catch (Exception ex) {
            Logger.getLogger(ViewCollege.class.getName()).log(Level.SEVERE, ex.getMessage());
        }

    }//GEN-LAST:event_cmbDepartmentItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewProgramStudy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewProgramStudy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewProgramStudy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewProgramStudy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewProgramStudy dialog = new NewProgramStudy(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<DropListItem> cmbCollege;
    private javax.swing.JComboBox<DropListItem> cmbDepartment;
    private javax.swing.JComboBox<DropListItem> cmbFieldOfStudy;
    private javax.swing.JComboBox<DropListItem> cmbProgramAdmission;
    private javax.swing.JComboBox<DropListItem> cmbProgramAward;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProgramStudy;
    // End of variables declaration//GEN-END:variables

    private void loadProgramAwards() {
        try {
            IProgramAwardService awardService = new ProgramAwardService(new ProgramAwardPersistence());
            var awards = awardService.getProgramAwards();
            for (ProgramAward award : awards) {
                DropListItem fieldItem = new DropListItem(award.getId(), award.getName());
                cmbProgramAward.addItem(fieldItem);
            }
        } catch (Exception ex) {
            Logger.getLogger(NewProgramAdmission.class.getName()).log(Level.SEVERE, ex.getMessage());
        }
    }

    private void loadProgramAdmissions() {
        try {
            IProgramAdmissionService admissionService = new ProgramAdmissionService(new ProgramAdmissionPersistence());
            var admissions = admissionService.getProgramAdmissions();
            for (ProgramAdmission admission : admissions) {
                DropListItem fieldItem = new DropListItem(admission.getId(), admission.getName());
                cmbProgramAdmission.addItem(fieldItem);
            }
        } catch (Exception ex) {
            Logger.getLogger(NewProgramAdmission.class.getName()).log(Level.SEVERE, ex.getMessage());
        }
    }

    private void loadProgramStudies() {
        if (cmbFieldOfStudy.getSelectedIndex() < 0) {
            return;
        }
        try {
            IProgramStudyService studyService = new ProgramStudyService(new ProgramStudyPersistence());
            var fieldSelected = (DropListItem) cmbFieldOfStudy.getSelectedItem();
            var programStudies = studyService.getByFieldOfStudyId(fieldSelected.getCodeValue());
            DefaultTableModel tableModel = (DefaultTableModel) tblProgramStudy.getModel();
            tableModel.setRowCount(0);
            for (ProgramStudyDO programStudy : programStudies) {
                tableModel.addRow(new Object[]{programStudy.getFieldOfStudy(), programStudy.getProgramAward(), programStudy.getProgramAdmission()});
            }
        } catch (Exception ex) {
            Logger.getLogger(NewProgramStudy.class.getName()).log(Level.SEVERE, ex.getMessage());
        }
    }

}
